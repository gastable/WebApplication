@using System.Data;



@model System.Data.DataTable
@{
    ViewBag.Title = "會員證券庫存";
    Layout = "~/Views/Shared/_MemberLayout.cshtml";
    int memberID = 22;
    string CCY = "USD";
    if (Session["mem"] != null)
    {
        memberID = Convert.ToInt32(Session["mem"]);
        CCY = Convert.ToString(Session["CCY"]);
    };
    string[] dataLegend = new string[Model.Rows.Count];
    var legendList = dataLegend.ToList();
    decimal[] data = new decimal[Model.Rows.Count];
    var dataList = data.ToList();
}

<div class="row my-3 py-3 shadow justify-content-around align-items-center rounded-lg">
    <div class="col-md-9">
        @Html.Action("_GetMemberSecList")
    </div>
    <div class="col-md-3">
        <canvas id="pieChart"></canvas>
    </div>

</div>
<h3>歷史交易明細</h3>
<table class="table">
    <thead>
        <tr>
            <th>
                日期
            </th>
            <th>
                交易種類
            </th>
            <th>
                證券代號
            </th>
            <th>
                股數
            </th>
            <th>
                價格
            </th>
            <th>
                手續費
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (DataRow row in Model.Rows)
        {
            legendList.Append(row["Symbol"]).ToArray();
            dataList.Append(Math.Round(Convert.ToDecimal(row["Share"]), 2)).ToArray();
            <tr>
                <td>
                    @Convert.ToDateTime(row["Date"]).ToString("yyyy/MM/dd")
                </td>
                <td>
                    @if (Convert.ToBoolean(row["TrancType"]))
                    {
                        <span class="text-danger">買進</span>
                    }
                    else
                    {
                        <span class="text-success">賣出</span>
                    }
                </td>
                <td>
                    @row["Symbol"]

                </td>
                <td>
                    @Math.Round(Convert.ToDecimal(row["Share"]), 2)

                </td>
                <td>
                    @Math.Round(Convert.ToDecimal(row["Price"]), 2)

                </td>
                <td>
                    @Math.Round(Convert.ToDecimal(row["Fee"]), 2)
                </td>
            </tr>
        }
    </tbody>   
</table>


@section scripts{

    <script>
       
        var pieChart;
        var pieData=[];
        var pieLabels = [];
        var id =@Html.Raw(memberID);
        function getMemberSecPie(id) {
            $.ajax({
                type: "get",
                url: 'http://localhost:56540/MemberSecurities/GetMemberSecPie/'+id,
                async: false,
                success: function (data) {
                    let i;
                    for (i = 0; i < data['data'].length; i++) {
                        pieData.push(data['data'][i]);
                        pieLabels.push(data['labels'][i]);
                    }
                }
            });
        };
        getMemberSecPie(id);
        console.log(pieData)

        data = {
            labels: pieLabels,
            datasets: [{
                label: ['現值'],
                data: pieData,
                backgroundColor: ["#b2e061", "#bd7ebe", "#ffb55a", "#ffee65", "#beb9db", "#fdcce5", "#8bd3c7", "#fd7f6f", "#7eb0d5"],
            }]
        };
        //var legendON = pie['labels'].length < 5 ? true : false;

        config = {
            type: "pie",
            data,
            options: {
                maintainAspectRatio: true,
                plugins: {
                    datalabels: {
                        align: 'center',
                        formatter: (value, context) => {
                            const datapoints = context.chart.config.data.datasets[0].data;
                            const totalvalue = datapoints.reduce((total, datapoint) => total + datapoint,
                                0);
                            const percentageValue = (value / totalvalue * 100).toFixed(2);
                            const display = [`${percentageValue}%`]
                            return display;
                        },
                        font: {
                            weight:'bold'
                        }
                    },
                    legend: {
                        display: true,
                        onHover: (event, chartElement) => {
                            event.native.target.style.cursor = 'pointer';
                        },
                        onLeave: (event, chartElement) => {
                            event.native.target.style.cursor = 'default';
                        }
                    }
                }
            },
            plugins: [ChartDataLabels]
        };
        pieChart = new Chart(document.getElementById("pieChart"),
            config);

    </script>
}
