@model IEnumerable<AMWP.Models.Dashboard>

@{
    ViewBag.Title = "會員資產管理";
    Layout = "~/Views/Shared/_MemberLayout.cshtml";
}

<div class="">
    <div class="row row-cols-4 justify-content-around">
        <div class="col rounded m-3">
            <canvas id="assetDoughnutChart"  @*height="150"*@ aria-label="各類資產配置" role="img"></canvas>
        <div class="text-center">各類資產配置</div>
        </div>
        <div class="col bg-info rounded m-3"">
            <canvas id="chrtSecAlloc"></canvas>

            <div class="text-center">證券資產配置</div>

        </div>
        <div class="col bg-info rounded m-3"">
            <canvas id="chrtAllocType"></canvas>

            <div class="text-center">證券類別佔比</div>
        </div>
    </div>

</div>



@section dashboardCSS{
    <link href="~/Content/dashboard.css" rel="stylesheet" />

}

@section dashboradJS{
   <script>
       const data = {
            labels: ['證券', '房產', '現金','虛擬貨幣','汽車'],
            datasets: [{
           label: ['資產現值'],
                data: [1500000, 5000000, 1600000,200000,600000],                
                hoverOffset: 4
            }]
        };

        const config = {
            type: 'doughnut',
            data,
            options: {
                scales: {
                },
                plugins: {
                    //tooltip: {enabled:false},
                    datalabels: {
                        align: 'center',
                        formatter: (value, context) => {
                            const datapoints = context.chart.config.data.datasets[0].data;
                            //console.log(context);
                            const assets = context.chart.config.data.labels[context.dataIndex];       
                            const totalvalue = datapoints.reduce((total, datapoint) => total + datapoint,
                                0);
                            const percentageValue = (value / totalvalue * 100).toFixed(2);
                            const display = [`${assets}：${percentageValue}%`]
                            return display;
                        }
                    }
                }
            },
            plugins: [ChartDataLabels]
        };

        const myChart = new Chart(document.getElementById('assetDoughnutChart'),
            config);

    </script>
    }
