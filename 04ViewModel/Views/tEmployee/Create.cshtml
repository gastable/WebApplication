@model _04ViewModel.Models.tEmployee

@{
    ViewBag.Title = "員工資料新增作業";
    var deptid = Request.QueryString["fDepId"];
}

<h2>新增作業</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>員工資料</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.fEmpId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fEmpId, new { htmlAttributes = new { @class = "form-control", placeholder = "Z01" } })
                @Html.ValidationMessageFor(model => model.fEmpId, "", new { @class = "text-danger" })
                <span class="text-danger">@ViewBag.PKCheck</span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fPhone, new { htmlAttributes = new { @class = "form-control", placeholder = "07-12345678" } })
                @Html.ValidationMessageFor(model => model.fPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fDepId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.fDepId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.fDepId, "", new { @class = "text-danger" })*@

                <select id="fDepId" name="fDepId" class="form-control">
                    @foreach (var item in ViewBag.Dept)
                    {
                        <option value="@item.fDepId" @(item.fDepId.ToString() == deptid ? "selected" : "")>@item.fDepName</option>
                    }
                </select>

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="送出" class="btn btn-success" />
                <h4 class="text-danger">@ViewBag.Msg</h4>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回員工管理主頁面", "Index", new { deptId = deptid }, new { @class = "btn btn-primary" })
</div>
@*將這裡設為區段section，取名為scripts，為了避免一直重覆載入同樣的函式庫而佔用資源*@
@section scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}
@*若要寫CSS，也可以用section處理，放進layout裡，而且不同頁面還能因應調整樣式*@
@section CSS{
<style>
    h4{
        background-color:yellow;
    }
</style>
    }